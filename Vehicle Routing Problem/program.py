"""Simple Vehicles Routing Problem (VRP).

   This is a sample using the routing library python wrapper to solve a VRP
   problem.
   A description of the problem can be found here:
   http://en.wikipedia.org/wiki/Vehicle_routing_problem.

   Distances are in meters.
"""

from ortools.constraint_solver import routing_enums_pb2
from ortools.constraint_solver import pywrapcp


def create_data_model(vehicles, depot):
    """Stores the data for the problem."""
    data = {}
    data['distance_matrix'] = [
        [
            0, 440, 247, 370, 1347, 378, 5, 59, 1135, 934, 593, 1336, 124,
            650, 130, 362, 1263, 553, 1318, 843, 1021, 335, 1236, 1144, 936,
            491, 90, 1187, 1200, 898, 1186, 467, 717, 1282, 1053, 1158, 1329,
            1004, 297, 990, 728, 4, 813, 651, 641, 741, 205, 533, 977, 43
        ],
        [
            518, 0, 384, 15, 271, 1289, 789, 754, 94, 207, 214, 736, 549, 253, 1205,
            938, 770, 677, 708, 1209, 954, 519, 764, 948, 407, 1277, 1198, 145,
            1189, 1019, 688, 462, 683, 1262, 1074, 238, 757, 620, 933, 1061, 675,
            120, 873, 287, 670, 441, 369, 264, 618, 55
        ],
        [
            973, 363, 0, 335, 602, 1157, 925, 460, 431, 1212, 959, 513, 412,
            1067, 849, 1348, 106, 998, 74, 11, 441, 652, 1298, 948, 77, 844, 657,
            820, 984, 893, 1134, 848, 1035, 488, 628, 715, 347, 101, 728, 142, 1105,
            726, 1357, 195, 259, 532, 1246, 905, 484, 1102
        ],
        [
            484, 219, 845, 0, 117, 1325, 596, 1190, 267, 913, 120, 898, 381, 1284,
            590, 876, 388, 934, 1188, 522, 1034, 719, 661, 978, 1365, 922, 379, 996,
            346, 342, 1354, 1252, 662, 871, 1107, 231, 725, 1271, 1331, 122, 161,
            735, 1183, 143, 584, 1077, 347, 583, 65, 25
        ],
        [
            439, 980, 627, 999, 0, 606, 917, 516, 438, 1311, 78, 142, 12, 125, 71,
            503, 120, 649, 845, 700, 667, 1050, 576, 939, 1058, 528, 618, 708, 285,
            432, 195, 1292, 675, 444, 293, 1117, 1103, 850, 1053, 322, 926, 346,
            18, 909, 460, 398, 808, 943, 535, 207
        ],
        [
            192, 1339, 755, 679, 1249, 0, 76, 450, 718, 1054, 911, 21, 620, 50,
            541, 174, 783, 652, 378, 944, 176, 584, 934, 1168, 865, 1043, 970, 922,
            1364, 979, 372, 853, 1264, 1091, 1140, 1231, 1214, 874, 999, 555, 716,
            1342, 0, 733, 1354, 751, 503, 801, 1121, 129
        ],
        [
            950, 454, 397, 839, 1321, 333, 0, 445, 155, 195, 1164, 349, 1286, 273,
            1360, 1331, 1108, 762, 1004, 146, 1326, 1344, 357, 1209, 7, 33, 370, 904,
            573, 523, 818, 1131, 687, 497, 749, 139, 1143, 1065, 240, 164, 572, 5,
            235, 187, 734, 647, 313, 12, 23, 1277
        ],
        [
            0, 939, 618, 912, 1324, 1099, 1147, 0, 1240, 821, 1042, 672, 1047,
            793, 891, 876, 388, 497, 673, 757, 792, 1202, 72, 377, 996, 782, 1091,
            4, 475, 495, 736, 684, 583, 1079, 398, 1138, 966, 1039, 115, 938, 947,
            1051, 1167, 1013, 1274, 1122, 1008, 135, 1117, 303
        ],
        [
            836, 1106, 259, 66, 174, 1267, 1233, 240, 0, 466, 620, 1125, 93, 867, 1006,
            662, 324, 353, 221, 1195, 1185, 1172, 1237, 1007, 204, 936, 538, 1000, 1156,
            498, 850, 910, 1321, 238, 195, 329, 194, 798, 507, 535, 1031, 957, 337,
            377, 487, 1187, 917, 880, 711, 176
        ],
        [
            1338, 446, 389, 1200, 385, 1302, 769, 966, 188, 0, 1074, 333, 1343, 1339,
            1115, 99, 1227, 1086, 1058, 1215, 1087, 1291, 457, 352, 1337, 1324, 572,
            932, 462, 165, 656, 1054, 260, 1365, 432, 736, 1053, 715, 1267, 1260, 246,
            1345, 1208, 1241, 802, 560, 491, 939, 859, 1145
        ],
        [
            835, 634, 252, 1286, 130, 981, 436, 320, 153, 454, 0, 85, 1094, 579,
            1261, 1260, 644, 624, 926, 543, 1234, 957, 285, 449, 259, 913, 595, 324,
            489, 1258, 70, 1198, 345, 568, 1024, 1233, 213, 545, 321, 382, 427, 775,
            438, 735, 751, 451, 440, 198, 984, 930
        ],
        [
            424, 292, 1191, 145, 654, 647, 360, 1270, 695, 307, 888, 0, 730,
            1324, 962, 1222, 91, 1002, 500, 698, 1282, 493, 427, 565, 651, 355,
            1238, 1133, 856, 955, 1080, 125, 342, 687, 1265, 997, 184, 136, 1139,
            779, 432, 1011, 707, 1174, 14, 315, 458, 380, 880, 364
        ],
        [
            724, 765, 87, 682, 499, 891, 516, 451, 1031, 1238, 1079, 70, 0, 685,
            458, 686, 390, 728, 1041, 1329, 104, 985, 940, 798, 89, 1332, 370, 465,
            137, 153, 269, 921, 348, 836, 211, 545, 669, 74, 290, 929, 722, 41,
            810, 1307, 1364, 120, 14, 901, 433, 738
        ],
        [
            925, 876, 1111, 1341, 1077, 601, 998, 1098, 569, 542, 1337, 1072,
            71, 0, 669, 1219, 1092, 86, 43, 443, 1211, 189, 1295, 398, 920, 430,
            429, 1135, 1110, 1283, 1041, 1306, 76, 837, 54, 880, 650, 324, 979, 846,
            1196, 126, 1002, 426, 957, 264, 393, 940, 1205, 572
        ],
        [
            1289, 942, 345, 217, 356, 678, 144, 565, 790, 143, 1353, 223, 855, 240,
            0, 773, 1344, 731, 327, 239, 159, 546, 1183, 1146, 363, 1093, 126, 854,
            75, 799, 216, 340, 59, 891, 996, 304, 909, 860, 623, 551, 573, 1092,
            355, 333, 640, 1332, 24, 54, 972, 835
        ],
        [
            451, 1338, 877, 3, 1114, 64, 680, 664, 462, 1055, 969, 814, 467, 38,
            487, 0, 1211, 453, 966, 444, 47, 241, 156, 647, 536, 832, 247, 125,
            530, 884, 979, 1014, 880, 906, 1220, 441, 1198, 748, 379, 1301, 1171, 135,
            430, 1078, 825, 885, 448, 283, 322, 1267
        ],
        [
            2, 845, 27, 320, 1087, 485, 877, 321, 1143, 868, 947, 626, 982, 355, 157,
            41, 0, 421, 279, 943, 1280, 84, 524, 40, 419, 671, 400, 452, 1256, 578,
            469, 460, 189, 110, 232, 1132, 882, 612, 478, 1013, 1133, 1100, 32, 408,
            366, 927, 715, 99, 734, 541
        ],
        [
            485, 5, 355, 1052, 566, 654, 1286, 361, 4, 592, 1037, 145, 1116, 902,
            766, 337, 128, 0, 537, 411, 991, 1048, 870, 665, 439, 1340, 892, 245, 1152,
            1245, 856, 641, 87, 696, 74, 1327, 228, 1000, 1307, 1317, 974, 487, 687,
            723, 158, 1139, 1315, 524, 18, 699
        ],
        [
            867, 783, 170, 605, 968, 254, 897, 274, 68, 1082, 402, 1002, 1360, 582,
            433, 1182, 1319, 952, 0, 681, 1088, 62, 116, 1136, 1068, 56, 1009, 418, 1208,
            716, 714, 40, 1224, 1279, 247, 736, 847, 1216, 1230, 1353, 165, 39, 1285,
            581, 567, 959, 8, 369, 919, 378
        ],
        [
            874, 1025, 507, 110, 366, 857, 6, 778, 1369, 692, 60, 1184, 1241, 933,
            832, 1272, 207, 168, 614, 0, 530, 317, 1130, 1315, 1004, 179, 281, 88, 369,
            458, 1068, 268, 182, 1038, 979, 992, 96, 64, 1134, 558, 452, 401, 140, 802, 971,
            793, 385, 232, 996, 230
        ],
        [
            855, 354, 727, 114, 1051, 450, 14, 611, 766, 118, 864, 1330, 67, 307, 789,
            1171, 394, 455, 198, 210, 0, 385, 142, 1174, 653, 194, 647, 726, 297,
            339, 975, 922, 929, 545, 965, 683, 492, 90, 693, 65, 164, 442, 676, 147,
            810, 775, 1098, 1170, 1060, 1351
        ],
        [
            356, 820, 459, 688, 473, 1002, 1283, 1118, 1191, 1129, 998, 466, 624,
            1152, 806, 360, 342, 656, 202, 359, 612, 0, 686, 1322, 690, 1072, 263,
            727, 861, 883, 156, 1110, 724, 917, 1297, 443, 831, 843, 260, 773, 741,
            885, 19, 369, 865, 1041, 683, 928, 1268, 278
        ],
        [
            952, 399, 419, 122, 35, 373, 486, 259, 1016, 328, 813, 297, 86, 687,
            510, 878, 379, 1155, 1355, 62, 517, 651, 0, 631, 346, 1343, 34, 766,
            344, 414, 727, 1148, 905, 854, 1194, 962, 585, 633, 327, 593, 920, 915,
            55, 508, 713, 147, 272, 889, 1064, 375
        ],
        [
            466, 882, 377, 318, 804, 1232, 492, 681, 792, 253, 1334, 1354, 1250,
            373, 138, 140, 883, 498, 32, 566, 581, 65, 1181, 0, 1013, 830, 24, 1032,
            711, 1095, 1362, 515, 1202, 945, 632, 1171, 286, 43, 26, 171, 597, 418,
            1342, 1217, 826, 583, 702, 473, 630, 691
        ],
        [
            1077, 591, 186, 830, 902, 515, 95, 1266, 96, 782, 1095, 976, 86, 1119, 153,
            261, 744, 887, 1333, 230, 45, 1191, 686, 294, 0, 224, 1298, 511, 596, 972,
            28, 459, 1128, 841, 283, 924, 923, 16, 819, 59, 595, 815, 1357, 885, 274, 1330,
            569, 745, 149, 491
        ],
        [
            1019, 1156, 785, 555, 272, 371, 1198, 1317, 262, 260, 446, 858, 442, 492,
            804, 322, 959, 350, 722, 287, 833, 189, 1348, 1341, 1346, 0, 472, 131,
            519, 300, 764, 710, 952, 162, 1254, 562, 139, 998, 1001, 904, 1274, 195,
            215, 525, 603, 1058, 1081, 1231, 1361, 987
        ],
        [
            276, 28, 361, 1047, 520, 1258, 1222, 109, 249, 741, 287, 431, 944,
            1115, 1337, 203, 883, 532, 995, 1175, 49, 38, 734, 1264, 101, 353, 0, 966,
            217, 1134, 1210, 986, 1351, 1127, 688, 344, 455, 930, 759, 1025, 778,
            162, 755, 384, 1310, 850, 1088, 226, 251, 928
        ],
        [
            1207, 921, 1341, 930, 1035, 929, 549, 489, 1246, 1145, 543, 1265, 310,
            598, 528, 391, 378, 1138, 1250, 34, 928, 1278, 953, 891, 630, 479,
            416, 0, 162, 298, 519, 159, 1030, 523, 841, 319, 154, 54, 402, 544, 231,
            1209, 1001, 348, 640, 961, 69, 1052, 534, 919
        ],
        [
            1177, 647, 930, 1016, 515, 1046, 806, 749, 514, 968, 898, 867, 189,
            1034, 562, 1043, 52, 814, 66, 675, 532, 587, 754, 958, 508, 1282, 802,
            1048, 0, 230, 287, 732, 12, 1049, 306, 131, 171, 141, 574, 876, 408, 1247,
            201, 138, 206, 1196, 45, 1279, 1137, 300
        ],
        [
            569, 675, 878, 1055, 476, 992, 355, 331, 484, 957, 1151, 1333, 486,
            1340, 205, 26, 438, 1106, 689, 434, 1013, 179, 235, 252, 1237, 435, 231,
            901, 257, 0, 860, 826, 1037, 445, 546, 1236, 177, 72, 819, 1298, 810, 1129,
            1107, 385, 1252, 494, 1080, 874, 383, 913
        ],
        [
            979, 88, 289, 1168, 353, 870, 833, 566, 56, 186, 574, 770, 968,
            357, 92, 198, 462, 863, 851, 421, 588, 391, 211, 674, 592, 960, 927,
            1331, 1221, 1368, 0, 608, 523, 1237, 1044, 1037, 790, 1115, 993, 489,
            415, 1, 698, 1152, 1179, 1177, 1262, 1124, 986, 1305
        ],
        [
            174, 1254, 1304, 678, 834, 280, 344, 1305, 657, 1309, 1266, 260, 97,
            211, 882, 392, 541, 1183, 1355, 303, 384, 757, 32, 1290, 389, 119, 684,
            1330, 59, 1057, 330, 0, 1177, 1005, 492, 1299, 1362, 1320, 569, 98,
            132, 949, 1121, 1255, 477, 216, 184, 1311, 1171, 101
        ],
        [
            135, 716, 1070, 137, 389, 1146, 1223, 40, 193, 401, 815, 809, 285,
            305, 1175, 1149, 838, 221, 738, 859, 335, 1311, 507, 253, 381, 409, 386,
            302, 1140, 766, 220, 127, 0, 280, 182, 21, 561, 632, 364, 411, 567, 301,
            467, 920, 457, 108, 1230, 1349, 42, 1340
        ],
        [
            902, 17, 1344, 1043, 1205, 713, 1001, 830, 913, 763, 1356, 854, 580,
            1255, 324, 559, 219, 916, 729, 68, 882, 262, 1335, 706, 40, 617, 286,
            639, 1113, 1299, 819, 703, 266, 0, 973, 911, 457, 1307, 824, 217, 949,
            467, 476, 1072, 1200, 249, 1345, 879, 1209, 869
        ],
        [
            135, 273, 19, 1335, 148, 645, 139, 1083, 1, 1245, 1050, 559, 488, 1198,
            224, 689, 793, 672, 1186, 25, 885, 1026, 707, 709, 294, 1027, 1175, 93,
            719, 530, 598, 364, 125, 346, 0, 805, 761, 77, 704, 1300, 1224, 142, 701,
            626, 860, 1254, 510, 152, 762, 38
        ],
        [
            555, 709, 1008, 1041, 128, 1320, 362, 601, 812, 1180, 814, 782, 573, 72,
            749, 550, 187, 1050, 1335, 53, 1135, 852, 595, 299, 817, 1117, 967, 408,
            999, 120, 644, 624, 773, 3, 783, 0, 1359, 1340, 261, 539, 1230, 757, 671,
            55, 1141, 1014, 329, 944, 1021, 679
        ],
        [
            363, 292, 20, 0, 620, 1108, 1304, 731, 966, 467, 143, 323, 1076, 1254,
            178, 1163, 738, 1051, 860, 101, 414, 718, 1368, 261, 880, 982, 580, 1032,
            104, 1287, 811, 895, 236, 277, 503, 1173, 0, 343, 380, 43, 730, 862,
            969, 1341, 449, 598, 442, 355, 498, 701
        ],
        [
            27, 812, 1134, 1160, 333, 252, 309, 289, 514, 638, 1215, 570, 146, 1013,
            755, 1140, 421, 882, 854, 1300, 637, 1053, 315, 489, 756, 728, 1348, 268,
            194, 653, 1208, 1330, 546, 3, 1005, 450, 678, 0, 809, 886, 635, 33, 470,
            733, 387, 47, 572, 849, 667, 1039
        ],
        [
            472, 1200, 350, 1211, 854, 1338, 716, 173, 171, 308, 42, 513, 766, 1050,
            1368, 1015, 78, 651, 690, 663, 722, 56, 729, 172, 462, 580, 1367, 822, 79,
            318, 303, 569, 754, 437, 917, 120, 1220, 147, 0, 405, 510, 106, 324, 453,
            629, 1047, 72, 599, 1255, 1208
        ],
        [
            555, 81, 526, 605, 1033, 638, 136, 883, 573, 973, 255, 174, 961, 485, 273,
            16, 327, 415, 559, 1283, 213, 690, 571, 197, 1247, 1011, 614, 79, 433, 87,
            535, 401, 887, 636, 354, 211, 528, 50, 93, 0, 279, 985, 857, 21, 962, 662,
            784, 3, 435, 181
        ],
        [
            267, 68, 730, 1299, 1014, 139, 836, 1312, 255, 623, 907, 65, 1224, 1107,
            660, 1297, 625, 1203, 741, 193, 586, 325, 1139, 154, 767, 285, 175, 233,
            62, 192, 843, 936, 587, 862, 829, 1171, 1270, 288, 718, 1295, 0, 92, 776,
            248, 965, 501, 543, 991, 599, 378
        ],
        [
            395, 273, 231, 511, 1213, 1153, 55, 655, 1038, 156, 354, 854, 761, 645,
            304, 1315, 1181, 1243, 1186, 743, 589, 1329, 256, 217, 1263, 1009, 121,
            445, 113, 330, 927, 1077, 285, 128, 291, 694, 647, 779, 1206, 1155,
            369, 0, 507, 142, 403, 871, 467, 101, 711, 561
        ],
        [
            672, 244, 1262, 170, 348, 725, 795, 777, 523, 808, 150, 1260, 405, 1012,
            1174, 426, 1086, 222, 189, 1316, 1020, 600, 1033, 1336, 351, 1028, 441,
            879, 461, 17, 886, 1120, 91, 701, 199, 692, 1324, 769, 617, 205, 1251,
            431, 0, 12, 1000, 1180, 745, 757, 6, 1276
        ],
        [
            1334, 911, 793, 776, 221, 1264, 589, 1077, 1106, 81, 225, 516, 692, 1147,
            1354, 1332, 200, 481, 8, 1207, 745, 742, 345, 829, 213, 737, 1318, 586,
            841, 856, 1167, 627, 846, 948, 498, 531, 317, 1290, 665, 281, 893, 642,
            1300, 0, 501, 716, 23, 311, 552, 253
        ],
        [
            33, 360, 1036, 474, 391, 849, 1069, 385, 1303, 484, 277, 309, 384, 1031,
            471, 1037, 1274, 518, 1245, 984, 597, 19, 85, 169, 920, 458, 399, 873,
            1099, 130, 1224, 725, 653, 453, 511, 727, 565, 715, 731, 710, 342, 1158,
            331, 307, 0, 328, 180, 344, 699, 186
        ],
        [
            850, 688, 1254, 1130, 1023, 1121, 657, 984, 856, 605, 1329, 1348, 306,
            1153, 349, 1016, 753, 1064, 151, 997, 1238, 1249, 395, 35, 833, 4, 1292,
            358, 1055, 1247, 905, 594, 1245, 124, 730, 1040, 702, 8, 559, 321, 697,
            272, 157, 1048, 26, 0, 921, 1300, 70, 1063
        ],
        [
            96, 843, 276, 1046, 266, 711, 1115, 518, 861, 41, 486, 1020, 1253, 121,
            830, 1318, 1264, 892, 347, 427, 789, 180, 225, 80, 1365, 1138, 406,
            663, 938, 257, 813, 439, 794, 367, 649, 1048, 557, 220, 1106, 887,
            1351, 1329, 130, 128, 1075, 446, 0, 896, 491, 477
        ],
        [
            300, 1226, 727, 382, 847, 366, 251, 982, 34, 1013, 495, 89, 1227, 10,
            925, 204, 714, 296, 13, 166, 242, 402, 851, 336, 1332, 1145, 882, 444,
            757, 1086, 349, 241, 8, 1125, 748, 228, 1190, 1337, 502, 428, 390,
            860, 660, 520, 1057, 11, 249, 0, 326, 487
        ],
        [
            454, 161, 1270, 869, 177, 993, 317, 576, 578, 579, 792, 184, 1098,
            463, 348, 626, 1358, 235, 458, 1007, 708, 16, 66, 163, 125, 1156,
            68, 557, 508, 782, 100, 944, 417, 857, 291, 969, 1145, 1369, 86,
            207, 814, 1218, 762, 132, 1221, 733, 1330, 42, 0, 952
        ],
        [
            1017, 713, 1231, 642, 873, 972, 932, 677, 1115, 1131, 1027, 378,
            312, 1114, 1303, 252, 594, 635, 1207, 862, 981, 147, 51, 1273,
            279, 1256, 739, 388, 480, 322, 435, 1355, 351, 1039, 777, 626,
            591, 422, 556, 397, 1204, 69, 1345, 1201, 794, 970, 331, 722, 603, 0
        ]
    ]
    data['num_vehicles'] = vehicles
    data['depot'] = depot
    return data


def print_solution(data, manager, routing, solution):
    """Prints solution on console."""
    print(f'Objective: {solution.ObjectiveValue()}')
    max_route_distance = 0
    for vehicle_id in range(data['num_vehicles']):
        index = routing.Start(vehicle_id)
        plan_output = 'Route for vehicle {}:\n'.format(vehicle_id)
        route_distance = 0
        while not routing.IsEnd(index):
            plan_output += ' {} -> '.format(manager.IndexToNode(index))
            previous_index = index
            index = solution.Value(routing.NextVar(index))
            route_distance += routing.GetArcCostForVehicle(
                previous_index, index, vehicle_id)
        plan_output += '{}\n'.format(manager.IndexToNode(index))
        plan_output += 'Distance of the route: {}m\n'.format(route_distance)
        print(plan_output)
        max_route_distance = max(route_distance, max_route_distance)
    print('Maximum of the route distances: {}m'.format(max_route_distance))



def main():
    """Entry point of the program."""
    # Instantiate the data problem.
    # Take input the no of vehicles and depot
    no_of_vehicles = eval(input("Enter No of vehicles: "))
    depot = eval(input("Enter depot: "))

    data = create_data_model(no_of_vehicles, depot)

    # Create the routing index manager.
    manager = pywrapcp.RoutingIndexManager(len(data['distance_matrix']),
                                           data['num_vehicles'], data['depot'])

    # Create Routing Model.
    routing = pywrapcp.RoutingModel(manager)


    # Create and register a transit callback.
    def distance_callback(from_index, to_index):
        """Returns the distance between the two nodes."""
        # Convert from routing variable Index to distance matrix NodeIndex.
        from_node = manager.IndexToNode(from_index)
        to_node = manager.IndexToNode(to_index)
        return data['distance_matrix'][from_node][to_node]

    transit_callback_index = routing.RegisterTransitCallback(distance_callback)

    # Define cost of each arc.
    routing.SetArcCostEvaluatorOfAllVehicles(transit_callback_index)

    # Add Distance constraint.
    dimension_name = 'Distance'
    routing.AddDimension(
        transit_callback_index,
        0,  # no slack
        3000,  # vehicle maximum travel distance
        True,  # start cumul to zero
        dimension_name)
    distance_dimension = routing.GetDimensionOrDie(dimension_name)
    distance_dimension.SetGlobalSpanCostCoefficient(100)

    # Setting first solution heuristic.
    search_parameters = pywrapcp.DefaultRoutingSearchParameters()
    search_parameters.first_solution_strategy = (
        routing_enums_pb2.FirstSolutionStrategy.PATH_CHEAPEST_ARC)

    # Solve the problem.
    solution = routing.SolveWithParameters(search_parameters)

    # Print solution on console.
    if solution:
        print_solution(data, manager, routing, solution)
    else:
        print('No solution found !')


if __name__ == '__main__':
    main()